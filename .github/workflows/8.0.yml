<<<<<<< HEAD
name: Docker Image CI

on:
  push:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
  workflow_dispatch:
=======
=======
    env:
      GITHUB_REPOSITORY: littlezo/php
>>>>>>> 08047ab9 (up)
=======
>>>>>>> dbb40abb (up)
    branches:
      - master
      - main
<<<<<<< HEAD
>>>>>>> b9295610 (ci build and push)
=======
    branches:
      - master
      - main
>>>>>>> af34a869 (Update ci.yml)
=======
      - ci-dev
>>>>>>> 40c11b30 (Update ci.yml)
=======
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
>>>>>>> 22795eec (feat:ci)
  schedule:
    - cron: 0 0 * * 0
<<<<<<< HEAD

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'
<<<<<<< HEAD

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

=======
>>>>>>> 04f37363 (up)
=======
env:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
>>>>>>> 970a9c65 (up)
=======
  USERNAME: ${{ secrets.USERNAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  HOST: ${{ secrets.HOST }}
defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

>>>>>>> dbb40abb (up)
=======
  NAMESPACE: ${{ vars.NAMESPACE }}
  USERNAME: ${{ vars.USERNAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  HOST: ${{ vars.HOST }}
<<<<<<< HEAD
<<<<<<< HEAD
>>>>>>> 22795eec (feat:ci)
=======
  DOCKER_NAMESPACE: ${{ vars.DH_NAMESPACE }}
  DOCKER_USERNAME: ${{ vars.DH_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DH_PASSWORD }}
  DOCKER_HOST: ${{ vars.DH_HOST }}
>>>>>>> e3b15287 (feat: add push docker hub)
=======
  DH_NAMESPACE: ${{ vars.DH_NAMESPACE }}
  DH_USERNAME: ${{ vars.DH_USERNAME }}
  DH_PASSWORD: ${{ secrets.DH_PASSWORD }}
<<<<<<< HEAD
  # DH_HOST: ${{ vars.DH_HOST }}
>>>>>>> 49915668 (fix:env)
=======
  DH_HOST: ${{ vars.DH_HOST }}
>>>>>>> 3e9e06f2 (ci)
=======
=======
name: Docker Image CI 8.0

on:
  workflow_run:
    workflows: ["Update Release"]
    types:
      - completed
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  # schedule:
    # - cron: 0 0 * * 0
env:
>>>>>>> 8ef6ba5f (Update 8.0)
  ACR_NAMESPACE: ${{ vars.ACR_NAMESPACE }}
  ACR_USERNAME: ${{ vars.ACR_USERNAME }}
  ACR_TOKEN: ${{ secrets.ACR_TOKEN }}
  ACR_REGISTRY: ${{ vars.ACR_REGISTRY }}
<<<<<<< HEAD
  GH_NAMESPACE: ${{ github.repository }}
  GH_USERNAME: ${{ github.actor }}
  GH_PASSWORD: ${{ secrets.PKGS_TOKEN }}
  GH_REGISTRY: ghcr.io
>>>>>>> b4f3c4ec (feat: Pusher Github Container registry)
=======
  GH_NAMESPACE: ${{ github.repository_owner }}
  GH_USERNAME: ${{ github.actor }}
  GH_PASSWORD: ${{ secrets.PKGS_TOKEN }}
  GH_REGISTRY: ghcr.io
>>>>>>> 8ef6ba5f (Update 8.0)
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
      - uses: actions/checkout@v4
=======
      - uses: actions/checkout@v3
>>>>>>> dbb40abb (up)
      - uses: docker-library/bashbrew@HEAD
      - id: generate-jobs
        name: Generate Jobs
        run: |
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
          strategy="$("$BASHBREW_SCRIPTS/github-actions/generate.sh")"

          EOF="EOF-$RANDOM-$RANDOM-$RANDOM"
          echo "strategy<<$EOF" >> "$GITHUB_OUTPUT"
          jq <<<"$strategy" . | tee -a "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"
=======
          git clone --depth 1 https://github.com/littlezo/docker-php.git -b master ~/bashbrew
          strategy="$(~/bashbrew/scripts/github-actions/generate.sh)"
=======
          git clone --depth 1 https://github.com/littlezo/docker-php.git -b master ~/temp
=======
          git clone --depth 1 https://github.com/littlezo/docker-php.git -b main ~/temp
>>>>>>> 42128cd8 (up)
          mv ~/temp/scripts/github-actions/generate.sh $BASHBREW_SCRIPTS/github-actions/generate.sh
=======
          # git clone --depth 1 https://github.com/littlezo/docker-php.git -b main ~/temp
          # mv ~/temp/scripts/github-actions/generate.sh $BASHBREW_SCRIPTS/github-actions/generate.sh
>>>>>>> 3d351472 (up)
          # cat $BASHBREW_SCRIPTS/github-actions/generate.sh
          # strategy="$(~/temp/scripts/github-actions/generate.sh)"
=======
>>>>>>> 60f9f684 (up)
          strategy="$("$BASHBREW_SCRIPTS/github-actions/generate.sh")"
          echo "strategy=$strategy" >> "$GITHUB_OUTPUT"
>>>>>>> 6d04cee6 (fix: Fix syntax)
          jq . <<<"$strategy" # sanity check / debugging aid
          echo "::set-output name=strategy::$strategy"
>>>>>>> 47b88e83 (ci scripts)
=======
          strategy="$("$BASHBREW_SCRIPTS/github-actions/generate.sh")"
          echo "strategy=$strategy" >> "$GITHUB_OUTPUT"
          jq . <<<"$strategy" # sanity check / debugging aid
>>>>>>> dbb40abb (up)

  test:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy) }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
<<<<<<< HEAD
<<<<<<< HEAD
      - uses: actions/checkout@v4
=======
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: actions/checkout@v3
>>>>>>> 6d04cee6 (fix: Fix syntax)
=======
      - uses: actions/checkout@v3
>>>>>>> dbb40abb (up)
      - name: Prepare Environment
        run: ${{ matrix.runs.prepare }}
      - name: Pull Dependencies
        run: ${{ matrix.runs.pull }}
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}
      - name: History ${{ matrix.name }}
        run: ${{ matrix.runs.history }}
      - name: Test ${{ matrix.name }}
        run: ${{ matrix.runs.test }}
      - name: '"docker images"'
        run: ${{ matrix.runs.images }}
<<<<<<< HEAD
      - name: Push images ${{ matrix.name }}
        run: ${{ matrix.runs.push }}
=======
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Apply Templates
        run: ./apply-templates.sh
      - name: Login
        run: docker login --username ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build or Push
        run: ./builds.sh
>>>>>>> 970a9c65 (up)
=======
>>>>>>> dbb40abb (up)
=======
=======
>>>>>>> 8ef6ba5f (Update 8.0)
    - uses: actions/checkout@v3
    - name: Check Git Status
      run: |
        status="$(git status --short)"
<<<<<<< HEAD
        [ -z "$status" ]
=======
        if [ -z "$status" ]; then
          echo "No new commits, skipping build."
          exit 0
        fi
>>>>>>> 8ef6ba5f (Update 8.0)
    - name: Login to the Aliyun ACR registry
      run: docker login --username ${{ vars.ACR_USERNAME }} --password ${{ secrets.ACR_TOKEN }}  ${{ vars.ACR_REGISTRY }}
    - name: Login to the Github Container registry
      run: docker login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
<<<<<<< HEAD
    - name: Update the Docker image Version
      run:  ./update.sh
<<<<<<< HEAD:.github/workflows/ci.yml
    - name: Build the Docker image and Publish to the Registry
      run:  ./builds.sh
>>>>>>> 22795eec (feat:ci)
=======
    - name: Build 8.0 the Docker image and Publish to the Registry
      run:  ./builds.sh 8.0
>>>>>>> 4ccc68df (feat: slicing version build):.github/workflows/8.0.yml
=======
    # - name: Update the Docker image Version
    #   run:  ./update.sh
    - name: Build 8.0 the Docker image and Publish to the Registry
      run:  ./publish.sh 8.0
>>>>>>> 8ef6ba5f (Update 8.0)
