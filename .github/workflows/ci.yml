name: GitHub CI

on:
  pull_request:
  push:
  workflow_dispatch:
  schedule:
    - cron: 0 0 * * 0

defaults:
  run:
    shell: 'bash -Eeuo pipefail -x {0}'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  apply-templates:
    name: Check For Uncomitted Changes
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Apply Templates
        run: ./apply-templates.sh
      - name: Check Git Status
        run: |
          status="$(git status --short)"
          [ -z "$status" ]
  generate-jobs:
    needs: apply-templates
    name: Generate Jobs
    runs-on: ubuntu-latest
    outputs:
      strategy: ${{ steps.generate-jobs.outputs.strategy }}
    steps:
      - uses: actions/checkout@v4
      - uses: docker-library/bashbrew@HEAD
      - id: generate-jobs
        name: Generate Jobs
        run: |
          # echo "$("$BASHBREW_SCRIPTS/github-actions/generate.sh")"
          # strategy="$("$BASHBREW_SCRIPTS/github-actions/generate.sh")"
          strategy="$("./scripts/github-actions/generate.sh")"
          EOF="EOF-$RANDOM-$RANDOM-$RANDOM"
          echo "strategy<<$EOF" >> "$GITHUB_OUTPUT"
          jq <<<"$strategy" . | tee -a "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"
  build:
    needs: generate-jobs
    strategy: ${{ fromJson(needs.generate-jobs.outputs.strategy) }}
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Login to the Github Container registry
        run: docker login --username ${{ github.actor }} --password ${{ secrets.GITHUB_TOKEN }} ghcr.io
      - name: Login to the Aliyun ACR registry
        run: docker login --username ${{ vars.ACR_USERNAME }} --password ${{ secrets.ACR_TOKEN }}  ${{ vars.ACR_REGISTRY }}
      - name: Prepare Environment
        run: ${{ matrix.runs.prepare }}
      - name: Pull Dependencies
        run: ${{ matrix.runs.pull }}
      - name: Build ${{ matrix.name }}
        run: ${{ matrix.runs.build }}
      - name: History ${{ matrix.name }}
        run: ${{ matrix.runs.history }}
      - name: Test ${{ matrix.name }}
        run: ${{ matrix.runs.test }}
      - name: '"docker images"'
        run: ${{ matrix.runs.images }}
      - name: Push images ${{ matrix.name }}
        run: ${{ matrix.runs.push }}
